---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import Header from "../components/header.astro";

const { site } = Astro; // baseurl
const image = new URL("social.jpg", site); //baseURL 스트링이 아니라 객체도 되나?
const description =
  "Build fast websites, faster. Astro is a new kind of site builder for the modern web. Lightning-fast performance meets powerful developer experience.";
---

<!DOCTYPE html>
<html lang="en" class="h-full motion-safe:scroll-smooth" data-theme="dark">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href="/favicon.ico" sizes="any" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />

    <title>Astro Landing Page</title>
    <meta name="description" content={description} />

    <!-- fonts -->
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      rel="preload"
      as="style"
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;800&display=swap"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;800&display=swap"
      media="print"
      onload="this.media='all'"
    />
    <noscript>
      <link
        rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Inter:wght@400;800&display=swap"
      />
    </noscript>

    <!-- social media -->
    <meta property="og:title" content="Astro" />
    <meta property="og:type" content="website" />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />
    <meta property="og:url" content={site} />
    <meta name="twitter:card" content="summary_large_image" />

    <!-- initialize theme -->

    <script is:inline>
      /* inline: relative & npm package imports are not supported. inline으로 작성한 style/script는 module import가 안되며, 
       react식 client-side script는 components에서 사용함.
       
       빌드된 html에 포함되어 빌드된다. */
      const themeSaved = localStorage.getItem("theme");
      
      if(themeSaved) {
        document.documentElement.dataset.theme = themeSaved;
      } else {
        const prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)"
        ).matches;
        document.documentElement.dataset.theme = prefersDark ? "dark" : "light";
        
        // html 자체에 dataset으로 dark, light 설정해 준다.
      }
      
    </script>
  </head>
  <body
    class="h-full overflow-x-hidden text-base bg-default text-default selection:bg-secondary selection:text-white"
  > 


    <Header />
  </body>
</html>
